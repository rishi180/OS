import java.util.*;
public class sjf {
    static void arrangeArrival(int num, int[][] mat) {
        for (int i = 0; i < num; i++) {
            for (int j = 0; j < num - i - 1; j++) {
                if (mat[j][1] > mat[j + 1][1]) {
                    for (int k = 0; k < 5; k++) {
                        int temp = mat[j][k];
                        mat[j][k] = mat[j + 1][k];
                        mat[j + 1][k] = temp;
                    }
                }
            }
        }
    }
    static void completionTime(int num, int[][] mat) {
        int temp, val = -1;
        mat[0][3] = mat[0][1] + mat[0][2];
        mat[0][5] = mat[0][3] - mat[0][1];
        mat[0][4] = mat[0][5] - mat[0][2];
        for (int i = 1; i < num; i++) {
            temp = mat[i - 1][3];
            int low = mat[i][2];
            for (int j = i; j < num; j++) {
                if (temp >= mat[j][1] && low >= mat[j][2]) {
                    low = mat[j][2];
                    val = j;
                }
            }
            mat[val][3] = temp + mat[val][2];
            mat[val][5] = mat[val][3] - mat[val][1];
            mat[val][4] = mat[val][5] - mat[val][2];
            for (int k = 0; k < 6; k++) {
                int tem = mat[val][k];
                mat[val][k] = mat[i][k];
                mat[i][k] = tem;
            }
        }
    }
    static void findAvgTime(int num, int[][] mat) {
        int total_waitingTime = 0, total_turnAroundTime = 0;
        for (int i = 0; i < num; i++) {
            total_waitingTime = total_waitingTime + mat[i][4];
            total_turnAroundTime = total_turnAroundTime + mat[i][5];
        }
        float s = (float) total_waitingTime / (float) num;
        float t = (float) total_turnAroundTime / (float) num;
        System.out.printf("\nAverage waiting time = %f", s);
        System.out.printf("\n");
        System.out.printf("Average turn around time = %f ", t);
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter number of Process: ");
        int num = sc.nextInt();
        int[][] mat = new int[num][6];
        for (int i = 0; i < num; i++) {
            System.out.println("...Process " + (i + 1) + "...");
            System.out.print("\tProcess Id: ");
            mat[i][0] = sc.nextInt();
            System.out.print("\tArrival Time: ");
            mat[i][1] = sc.nextInt();
            System.out.print("\tBurst Time: ");
            mat[i][2] = sc.nextInt();
        }
        System.out.println("Before Arrange...");
        System.out.println("Process ID\tArrival Time\tBurst Time");
        for (int i = 0; i < num; i++) {
            System.out.printf("%d\t\t%d\t\t%d\n", mat[i][0], mat[i][1], mat[i]
                    [2]);
        }
        arrangeArrival(num, mat);
        completionTime(num, mat);
        System.out.println("Final Result...");
        System.out.println(
                "Process ID\tArrival Time\tBurst Time\tWaiting Time\tTurnaround Time"
        );
        for (int i = 0; i < num; i++) {
            System.out.printf(
                    "%d\t\t%d\t\t%d\t\t%d\t\t%d\n",
                    mat[i][0],
                    mat[i][1],
                    mat[i][2],
                    mat[i][4],
                    mat[i][5]
            );
        }
        findAvgTime(num, mat);
        sc.close();
    }
}

